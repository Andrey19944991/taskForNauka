{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cheko\\\\ReactProjects\\\\react-front\\\\src\\\\App.js\";\nimport React from 'react';\nimport Table from \"./Table/Table\";\nimport './App.css';\nimport Loader from \"./Loader/Loader\";\nimport Months from \"./Months/Months\";\nimport Departments from \"./Departments/Departments\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      data: [],\n      jan: {},\n      feb: {},\n      march: {},\n      april: {},\n      may: {},\n      june: {},\n      july: {},\n      aug: {},\n      sep: {},\n      oct: {},\n      nov: {},\n      dec: {},\n      department: [],\n      resMonth: {},\n      resDep: {}\n    };\n  }\n\n  monthClickHandler(index) {\n    switch (index) {\n      case 0:\n        this.setState({\n          resMonth: this.state.jan\n        });\n        break;\n\n      case 1:\n        this.setState({\n          resMonth: this.state.feb\n        });\n        break;\n\n      case 2:\n        this.setState({\n          resMonth: this.state.march\n        });\n        break;\n\n      case 3:\n        this.setState({\n          resMonth: this.state.april\n        });\n        break;\n\n      case 4:\n        this.setState({\n          resMonth: this.state.may\n        });\n        break;\n\n      case 5:\n        this.setState({\n          resMonth: this.state.june\n        });\n        break;\n\n      case 6:\n        this.setState({\n          resMonth: this.state.july\n        });\n        break;\n\n      case 7:\n        this.setState({\n          resMonth: this.state.aug\n        });\n        break;\n\n      case 8:\n        this.setState({\n          resMonth: this.state.sep\n        });\n        break;\n\n      case 9:\n        this.setState({\n          resMonth: this.state.oct\n        });\n        break;\n\n      case 10:\n        this.setState({\n          resMonth: this.state.nov\n        });\n        break;\n\n      case 11:\n        this.setState({\n          resMonth: this.state.dec\n        });\n        break;\n    }\n  }\n\n  departClickHandler(index) {\n    this.setState({\n      resDep: {\n        dataDep: this.state.department[index],\n        index: index\n      }\n    });\n  }\n\n  async componentDidMount() {\n    const response = await fetch(` http://localhost:8080/reports`);\n    const data = await response.json();\n    let departName = [];\n    let jan = [];\n    let feb = [];\n    let march = [];\n    let april = [];\n    let may = [];\n    let month;\n    data.forEach(item => {\n      departName.push(item.employee.department.name);\n      month = new Date(item.date);\n\n      if (month.getMonth() === 0) {\n        jan.push(item);\n      }\n\n      if (month.getMonth() === 1) {\n        feb.push(item);\n      }\n\n      if (month.getMonth() === 2) {\n        march.push(item);\n      }\n\n      if (month.getMonth() === 3) {\n        april.push(item);\n      }\n\n      if (month.getMonth() === 4) {\n        may.push(item);\n      }\n    });\n    const depart = Array.from(new Set(departName));\n    this.setState({\n      data,\n      jan: {\n        dataOfMonth: jan,\n        countOfDays: 31\n      },\n      feb: {\n        dataOfMonth: feb,\n        countOfDays: 29\n      },\n      march: {\n        dataOfMonth: march,\n        countOfDays: 31\n      },\n      april: {\n        dataOfMonth: april,\n        countOfDays: 30\n      },\n      may: {\n        dataOfMonth: may,\n        countOfDays: 31\n      },\n      june: {\n        dataOfMonth: [],\n        countOfDays: 30\n      },\n      july: {\n        dataOfMonth: [],\n        countOfDays: 31\n      },\n      aug: {\n        dataOfMonth: [],\n        countOfDays: 31\n      },\n      sep: {\n        dataOfMonth: [],\n        countOfDays: 30\n      },\n      oct: {\n        dataOfMonth: [],\n        countOfDays: 31\n      },\n      nov: {\n        dataOfMonth: [],\n        countOfDays: 30\n      },\n      dec: {\n        dataOfMonth: [],\n        countOfDays: 31\n      },\n      department: depart,\n      isLoading: false,\n      resMonth: {\n        dataOfMonth: may,\n        countOfDays: 31\n      },\n      resDep: {\n        dataDep: depart[0],\n        index: 0\n      }\n    });\n  }\n\n  render() {\n    let days = []; // for (let i = 0; i < this.state.jan.countOfDays; i++) {\n\n    for (let i = 0; i < this.state.resMonth; i++) {\n      days.push(i + 1);\n    }\n\n    const monthArr = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let months = null;\n    months = monthArr.map((month, index) => {\n      return /*#__PURE__*/React.createElement(Months, {\n        key: index,\n        month: month,\n        index: index,\n        monthClick: this.monthClickHandler.bind(this, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 9\n        }\n      });\n    });\n    let department = null;\n    department = this.state.department.map((depart, index) => {\n      return /*#__PURE__*/React.createElement(Departments, {\n        key: index,\n        depart: depart,\n        index: index,\n        departClick: this.departClickHandler.bind(this, index),\n        currentDep: this.state.resDep.index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 9\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-group\",\n      role: \"group\",\n      \"aria-label\": \"Basic example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }\n    }, months), this.state.isLoading ? /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-group-vertical\",\n      role: \"group\",\n      \"aria-label\": \"Basic example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }\n    }, department)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-10 overflow-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      resMonth: this.state.resMonth,\n      department: this.state.resDep.dataDep,\n      days: days,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/cheko/ReactProjects/react-front/src/App.js"],"names":["React","Table","Loader","Months","Departments","App","Component","state","isLoading","data","jan","feb","march","april","may","june","july","aug","sep","oct","nov","dec","department","resMonth","resDep","monthClickHandler","index","setState","departClickHandler","dataDep","componentDidMount","response","fetch","json","departName","month","forEach","item","push","employee","name","Date","date","getMonth","depart","Array","from","Set","dataOfMonth","countOfDays","render","days","i","monthArr","months","map","bind"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Table from \"./Table/Table\";\nimport './App.css';\nimport Loader from \"./Loader/Loader\";\nimport Months from \"./Months/Months\";\nimport Departments from \"./Departments/Departments\";\n\nclass App extends React.Component {\n\n\n  state ={\n    isLoading: true,\n    data: [],\n    jan: {},\n    feb: {},\n    march: {},\n    april: {},\n    may: {},\n    june: {},\n    july: {},\n    aug: {},\n    sep: {},\n    oct: {},\n    nov: {},\n    dec: {},\n    department: [],\n    resMonth:{},\n    resDep: {},\n  }\n\n  monthClickHandler(index){\n    switch (index) {\n      case 0:\n        this.setState({\n          resMonth: this.state.jan\n        });\n        break;\n      case 1:\n        this.setState({\n          resMonth: this.state.feb\n        })\n        break;\n      case 2:\n        this.setState({\n          resMonth: this.state.march\n        })\n        break;\n      case 3:\n        this.setState({\n          resMonth: this.state.april\n        })\n        break;\n      case 4:\n        this.setState({\n          resMonth: this.state.may\n        })\n        break;\n      case 5:\n        this.setState({\n          resMonth: this.state.june\n        })\n        break;\n      case 6:\n        this.setState({\n          resMonth: this.state.july\n        })\n        break;\n      case 7:\n        this.setState({\n          resMonth: this.state.aug\n        })\n        break;\n      case 8:\n        this.setState({\n          resMonth: this.state.sep\n        })\n        break;\n      case 9:\n        this.setState({\n          resMonth: this.state.oct\n        })\n        break;\n      case 10:\n        this.setState({\n          resMonth: this.state.nov\n        })\n        break;\n      case 11:\n        this.setState({\n          resMonth: this.state.dec\n        })\n        break;\n    }\n  }\n  departClickHandler(index){\n    this.setState({\n      resDep: {dataDep: this.state.department[index], index: index}\n    })\n  }\n\n  async componentDidMount() {\n    const response = await fetch(` http://localhost:8080/reports`)\n    const data = await response.json();\n    let departName = [];\n    let jan = [];\n    let feb = [];\n    let march = [];\n    let april = [];\n    let may = [];\n    let month;\n\n    data.forEach((item) => {\n      departName.push(item.employee.department.name);\n      month = new Date(item.date);\n      if (month.getMonth() === 0) {\n        jan.push(item);\n      }\n      if (month.getMonth() === 1) {\n        feb.push(item);\n      }\n      if (month.getMonth() === 2) {\n        march.push(item);\n      }\n      if (month.getMonth() === 3) {\n        april.push(item);\n      }\n      if (month.getMonth() === 4) {\n        may.push(item);\n      }\n    });\n    const depart = Array.from(new Set(departName));\n    this.setState({\n      data,\n      jan: {dataOfMonth:jan, countOfDays: 31},\n      feb: {dataOfMonth:feb, countOfDays: 29},\n      march: {dataOfMonth:march, countOfDays: 31},\n      april: {dataOfMonth:april, countOfDays: 30},\n      may: {dataOfMonth:may, countOfDays: 31},\n      june: {dataOfMonth:[], countOfDays: 30},\n      july: {dataOfMonth:[], countOfDays: 31},\n      aug: {dataOfMonth:[], countOfDays: 31},\n      sep: {dataOfMonth:[], countOfDays: 30},\n      oct: {dataOfMonth:[], countOfDays: 31},\n      nov: {dataOfMonth:[], countOfDays: 30},\n      dec: {dataOfMonth:[], countOfDays: 31},\n      department: depart,\n      isLoading: false,\n      resMonth: {dataOfMonth: may, countOfDays:31},\n      resDep: {dataDep:depart[0], index: 0}\n    })\n  }\n  render() {\n    let days = [];\n    // for (let i = 0; i < this.state.jan.countOfDays; i++) {\n    for (let i = 0; i < this.state.resMonth; i++) {\n      days.push(i+1);\n    }\n    const monthArr = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\",\n      \"November\", \"December\"];\n    let months = null;\n    months = monthArr.map((month, index) => {\n      return (\n        <Months\n            key={index}\n            month={month}\n            index={index}\n            monthClick={this.monthClickHandler.bind(this, index)}\n        />\n    )});\n\n    let department = null;\n    department = this.state.department.map((depart, index) => {\n      return (\n        <Departments\n            key={index}\n            depart={depart}\n            index={index}\n            departClick={this.departClickHandler.bind(this, index)}\n            currentDep={this.state.resDep.index}\n        />\n      )\n    })\n    return (\n        <div>\n          <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n          {months}\n          </div>\n          {this.state.isLoading\n                ? <Loader />\n                :\n              <div className=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-2\">\n                <div className=\"btn-group-vertical\" role=\"group\" aria-label=\"Basic example\">\n                  {department}\n                </div>\n                </div>\n                <div className=\"col-10 overflow-auto\">\n                <Table\n                    resMonth={this.state.resMonth}\n                    department={this.state.resDep.dataDep}\n                    days={days}\n                />\n                </div>\n              </div>\n              </div>\n          }\n        </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}