{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cheko\\\\ReactProjects\\\\react-front\\\\src\\\\App.js\";\nimport React from 'react';\nimport Table from \"./Table/Table\";\nimport './App.css';\nimport Loader from \"./Loader/Loader\";\nimport Months from \"./Months/Months\";\nimport Departments from \"./Departments/Departments\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      data: [],\n      jan: {},\n      feb: {},\n      march: {},\n      april: {},\n      may: {},\n      june: {},\n      july: {},\n      aug: {},\n      sep: {},\n      oct: {},\n      nov: {},\n      dec: {},\n      department: [],\n      resMonth: {},\n      resDep: {}\n    };\n  }\n\n  // resMonth: {dataOfMonth: may, countOfDays:31, index: 4},\n  monthClickHandler(index) {\n    switch (index) {\n      case 0:\n        this.setState({\n          resMonth: {\n            dataOfMonth: this.state.jan,\n            countOfDays: this.state.jan.countOfDays,\n            index: 0\n          }\n        });\n        break;\n\n      case 1:\n        this.setState({\n          resMonth: {\n            dataOfMonth: this.state.feb,\n            countOfDays: this.state.feb.countOfDays,\n            index: 1\n          }\n        });\n        break;\n\n      case 2:\n        this.setState({\n          resMonth: {\n            dataOfMonth: this.state.march,\n            countOfDays: this.state.march.countOfDays,\n            index: 2\n          }\n        });\n        break;\n\n      case 3:\n        this.setState({\n          resMonth: {\n            dataOfMonth: this.state.april,\n            countOfDays: this.state.april.countOfDays,\n            index: 3\n          }\n        });\n        break;\n\n      case 4:\n        this.setState({\n          resMonth: {\n            dataOfMonth: this.state.may,\n            countOfDays: this.state.may.countOfDays,\n            index: 4\n          }\n        });\n        break;\n\n      case 5:\n        this.setState({\n          resMonth: {\n            dataOfMonth: this.state.june,\n            countOfDays: this.state.june.countOfDays,\n            index: 5\n          }\n        });\n        break;\n\n      case 6:\n        this.setState({\n          resMonth: {\n            dataOfMonth: this.state.july,\n            countOfDays: this.state.july.countOfDays,\n            index: 6\n          }\n        });\n        break;\n\n      case 7:\n        this.setState({\n          resMonth: {\n            dataOfMonth: this.state.aug,\n            countOfDays: this.state.aug.countOfDays,\n            index: 7\n          }\n        });\n        break;\n\n      case 8:\n        this.setState({\n          resMonth: {\n            dataOfMonth: this.state.sep,\n            countOfDays: this.state.sep.countOfDays,\n            index: 8\n          }\n        });\n        break;\n\n      case 9:\n        this.setState({\n          resMonth: {\n            dataOfMonth: this.state.oct,\n            countOfDays: this.state.oct.countOfDays,\n            index: 9\n          }\n        });\n        break;\n\n      case 10:\n        this.setState({\n          resMonth: {\n            dataOfMonth: this.state.nov,\n            countOfDays: this.state.nov.countOfDays,\n            index: 10\n          }\n        });\n        break;\n\n      case 11:\n        this.setState({\n          resMonth: {\n            dataOfMonth: this.state.dec,\n            countOfDays: this.state.dec.countOfDays,\n            index: 11\n          }\n        });\n        break;\n\n      default:\n        this.setState({\n          resMonth: {\n            dataOfMonth: this.state.may,\n            countOfDays: this.state.may.countOfDays,\n            index: 4\n          }\n        });\n    }\n  }\n\n  departClickHandler(index) {\n    this.setState({\n      resDep: {\n        dataDep: this.state.department[index],\n        index: index\n      }\n    });\n  }\n\n  async componentDidMount() {\n    const response = await fetch(` http://localhost:8080/reports`);\n    const data = await response.json();\n    let departName = [];\n    let jan = [];\n    let feb = [];\n    let march = [];\n    let april = [];\n    let may = [];\n    let month;\n    data.forEach(item => {\n      departName.push(item.employee.department.name);\n      month = new Date(item.date);\n\n      if (month.getMonth() === 0) {\n        jan.push(item);\n      }\n\n      if (month.getMonth() === 1) {\n        feb.push(item);\n      }\n\n      if (month.getMonth() === 2) {\n        march.push(item);\n      }\n\n      if (month.getMonth() === 3) {\n        april.push(item);\n      }\n\n      if (month.getMonth() === 4) {\n        may.push(item);\n      }\n    });\n    const depart = Array.from(new Set(departName));\n    this.setState({\n      data,\n      jan: {\n        dataOfMonth: jan,\n        countOfDays: 31\n      },\n      feb: {\n        dataOfMonth: feb,\n        countOfDays: 29\n      },\n      march: {\n        dataOfMonth: march,\n        countOfDays: 31\n      },\n      april: {\n        dataOfMonth: april,\n        countOfDays: 30\n      },\n      may: {\n        dataOfMonth: may,\n        countOfDays: 31\n      },\n      june: {\n        dataOfMonth: [],\n        countOfDays: 30\n      },\n      july: {\n        dataOfMonth: [],\n        countOfDays: 31\n      },\n      aug: {\n        dataOfMonth: [],\n        countOfDays: 31\n      },\n      sep: {\n        dataOfMonth: [],\n        countOfDays: 30\n      },\n      oct: {\n        dataOfMonth: [],\n        countOfDays: 31\n      },\n      nov: {\n        dataOfMonth: [],\n        countOfDays: 30\n      },\n      dec: {\n        dataOfMonth: [],\n        countOfDays: 31\n      },\n      department: depart,\n      isLoading: false,\n      resMonth: {\n        dataOfMonth: may,\n        countOfDays: 31,\n        index: 4\n      },\n      resDep: {\n        dataDep: depart[0],\n        index: 0\n      }\n    });\n  }\n\n  render() {\n    let days = []; // for (let i = 0; i < this.state.jan.countOfDays; i++) {\n\n    for (let i = 0; i < this.state.resMonth; i++) {\n      days.push(i + 1);\n    }\n\n    console.log(days);\n    const monthArr = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let months = null;\n    months = monthArr.map((month, index) => {\n      return /*#__PURE__*/React.createElement(Months, {\n        key: index,\n        month: month,\n        index: index,\n        monthClick: this.monthClickHandler.bind(this, index),\n        currentMonth: this.state.resMonth.index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 9\n        }\n      });\n    });\n    let department = null;\n    department = this.state.department.map((depart, index) => {\n      return /*#__PURE__*/React.createElement(Departments, {\n        key: index,\n        depart: depart,\n        index: index,\n        departClick: this.departClickHandler.bind(this, index),\n        currentDep: this.state.resDep.index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 9\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-group\",\n      role: \"group\",\n      \"aria-label\": \"Basic example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }\n    }, months), this.state.isLoading ? /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-group-vertical\",\n      role: \"group\",\n      \"aria-label\": \"Basic example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }\n    }, department)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-10 overflow-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      resMonth: this.state.resMonth.dataOfMonth,\n      department: this.state.resDep.dataDep,\n      days: days,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/cheko/ReactProjects/react-front/src/App.js"],"names":["React","Table","Loader","Months","Departments","App","Component","state","isLoading","data","jan","feb","march","april","may","june","july","aug","sep","oct","nov","dec","department","resMonth","resDep","monthClickHandler","index","setState","dataOfMonth","countOfDays","departClickHandler","dataDep","componentDidMount","response","fetch","json","departName","month","forEach","item","push","employee","name","Date","date","getMonth","depart","Array","from","Set","render","days","i","console","log","monthArr","months","map","bind"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAGhCC,KAHgC,GAGzB;AACLC,MAAAA,SAAS,EAAE,IADN;AAELC,MAAAA,IAAI,EAAE,EAFD;AAGLC,MAAAA,GAAG,EAAE,EAHA;AAILC,MAAAA,GAAG,EAAE,EAJA;AAKLC,MAAAA,KAAK,EAAE,EALF;AAMLC,MAAAA,KAAK,EAAE,EANF;AAOLC,MAAAA,GAAG,EAAE,EAPA;AAQLC,MAAAA,IAAI,EAAE,EARD;AASLC,MAAAA,IAAI,EAAE,EATD;AAULC,MAAAA,GAAG,EAAE,EAVA;AAWLC,MAAAA,GAAG,EAAE,EAXA;AAYLC,MAAAA,GAAG,EAAE,EAZA;AAaLC,MAAAA,GAAG,EAAE,EAbA;AAcLC,MAAAA,GAAG,EAAE,EAdA;AAeLC,MAAAA,UAAU,EAAE,EAfP;AAgBLC,MAAAA,QAAQ,EAAC,EAhBJ;AAiBLC,MAAAA,MAAM,EAAE;AAjBH,KAHyB;AAAA;;AAuBhC;AACAC,EAAAA,iBAAiB,CAACC,KAAD,EAAO;AACtB,YAAQA,KAAR;AACE,WAAK,CAAL;AACE,aAAKC,QAAL,CAAc;AACZJ,UAAAA,QAAQ,EAAE;AAACK,YAAAA,WAAW,EAAE,KAAKrB,KAAL,CAAWG,GAAzB;AAA8BmB,YAAAA,WAAW,EAAE,KAAKtB,KAAL,CAAWG,GAAX,CAAemB,WAA1D;AAAuEH,YAAAA,KAAK,EAAE;AAA9E;AADE,SAAd;AAGA;;AACF,WAAK,CAAL;AACE,aAAKC,QAAL,CAAc;AACZJ,UAAAA,QAAQ,EAAE;AAACK,YAAAA,WAAW,EAAE,KAAKrB,KAAL,CAAWI,GAAzB;AAA8BkB,YAAAA,WAAW,EAAE,KAAKtB,KAAL,CAAWI,GAAX,CAAekB,WAA1D;AAAuEH,YAAAA,KAAK,EAAE;AAA9E;AADE,SAAd;AAGA;;AACF,WAAK,CAAL;AACE,aAAKC,QAAL,CAAc;AACZJ,UAAAA,QAAQ,EAAE;AAACK,YAAAA,WAAW,EAAE,KAAKrB,KAAL,CAAWK,KAAzB;AAAgCiB,YAAAA,WAAW,EAAE,KAAKtB,KAAL,CAAWK,KAAX,CAAiBiB,WAA9D;AAA2EH,YAAAA,KAAK,EAAE;AAAlF;AADE,SAAd;AAGA;;AACF,WAAK,CAAL;AACE,aAAKC,QAAL,CAAc;AACZJ,UAAAA,QAAQ,EAAE;AAACK,YAAAA,WAAW,EAAE,KAAKrB,KAAL,CAAWM,KAAzB;AAAgCgB,YAAAA,WAAW,EAAE,KAAKtB,KAAL,CAAWM,KAAX,CAAiBgB,WAA9D;AAA2EH,YAAAA,KAAK,EAAE;AAAlF;AADE,SAAd;AAGA;;AACF,WAAK,CAAL;AACE,aAAKC,QAAL,CAAc;AACZJ,UAAAA,QAAQ,EAAE;AAACK,YAAAA,WAAW,EAAE,KAAKrB,KAAL,CAAWO,GAAzB;AAA8Be,YAAAA,WAAW,EAAE,KAAKtB,KAAL,CAAWO,GAAX,CAAee,WAA1D;AAAuEH,YAAAA,KAAK,EAAE;AAA9E;AADE,SAAd;AAGA;;AACF,WAAK,CAAL;AACE,aAAKC,QAAL,CAAc;AACZJ,UAAAA,QAAQ,EAAE;AAACK,YAAAA,WAAW,EAAE,KAAKrB,KAAL,CAAWQ,IAAzB;AAA+Bc,YAAAA,WAAW,EAAE,KAAKtB,KAAL,CAAWQ,IAAX,CAAgBc,WAA5D;AAAyEH,YAAAA,KAAK,EAAE;AAAhF;AADE,SAAd;AAGA;;AACF,WAAK,CAAL;AACE,aAAKC,QAAL,CAAc;AACZJ,UAAAA,QAAQ,EAAE;AAACK,YAAAA,WAAW,EAAE,KAAKrB,KAAL,CAAWS,IAAzB;AAA+Ba,YAAAA,WAAW,EAAE,KAAKtB,KAAL,CAAWS,IAAX,CAAgBa,WAA5D;AAAyEH,YAAAA,KAAK,EAAE;AAAhF;AADE,SAAd;AAGA;;AACF,WAAK,CAAL;AACE,aAAKC,QAAL,CAAc;AACZJ,UAAAA,QAAQ,EAAE;AAACK,YAAAA,WAAW,EAAE,KAAKrB,KAAL,CAAWU,GAAzB;AAA8BY,YAAAA,WAAW,EAAE,KAAKtB,KAAL,CAAWU,GAAX,CAAeY,WAA1D;AAAuEH,YAAAA,KAAK,EAAE;AAA9E;AADE,SAAd;AAGA;;AACF,WAAK,CAAL;AACE,aAAKC,QAAL,CAAc;AACZJ,UAAAA,QAAQ,EAAE;AAACK,YAAAA,WAAW,EAAE,KAAKrB,KAAL,CAAWW,GAAzB;AAA8BW,YAAAA,WAAW,EAAE,KAAKtB,KAAL,CAAWW,GAAX,CAAeW,WAA1D;AAAuEH,YAAAA,KAAK,EAAE;AAA9E;AADE,SAAd;AAGA;;AACF,WAAK,CAAL;AACE,aAAKC,QAAL,CAAc;AACZJ,UAAAA,QAAQ,EAAE;AAACK,YAAAA,WAAW,EAAE,KAAKrB,KAAL,CAAWY,GAAzB;AAA8BU,YAAAA,WAAW,EAAE,KAAKtB,KAAL,CAAWY,GAAX,CAAeU,WAA1D;AAAuEH,YAAAA,KAAK,EAAE;AAA9E;AADE,SAAd;AAGA;;AACF,WAAK,EAAL;AACE,aAAKC,QAAL,CAAc;AACZJ,UAAAA,QAAQ,EAAE;AAACK,YAAAA,WAAW,EAAE,KAAKrB,KAAL,CAAWa,GAAzB;AAA8BS,YAAAA,WAAW,EAAE,KAAKtB,KAAL,CAAWa,GAAX,CAAeS,WAA1D;AAAuEH,YAAAA,KAAK,EAAE;AAA9E;AADE,SAAd;AAGA;;AACF,WAAK,EAAL;AACE,aAAKC,QAAL,CAAc;AACZJ,UAAAA,QAAQ,EAAE;AAACK,YAAAA,WAAW,EAAE,KAAKrB,KAAL,CAAWc,GAAzB;AAA8BQ,YAAAA,WAAW,EAAE,KAAKtB,KAAL,CAAWc,GAAX,CAAeQ,WAA1D;AAAuEH,YAAAA,KAAK,EAAE;AAA9E;AADE,SAAd;AAGA;;AACF;AACE,aAAKC,QAAL,CAAc;AACZJ,UAAAA,QAAQ,EAAE;AAACK,YAAAA,WAAW,EAAE,KAAKrB,KAAL,CAAWO,GAAzB;AAA8Be,YAAAA,WAAW,EAAE,KAAKtB,KAAL,CAAWO,GAAX,CAAee,WAA1D;AAAuEH,YAAAA,KAAK,EAAE;AAA9E;AADE,SAAd;AA9DJ;AAkED;;AACDI,EAAAA,kBAAkB,CAACJ,KAAD,EAAO;AACvB,SAAKC,QAAL,CAAc;AACZH,MAAAA,MAAM,EAAE;AAACO,QAAAA,OAAO,EAAE,KAAKxB,KAAL,CAAWe,UAAX,CAAsBI,KAAtB,CAAV;AAAwCA,QAAAA,KAAK,EAAEA;AAA/C;AADI,KAAd;AAGD;;AAED,QAAMM,iBAAN,GAA0B;AACxB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,gCAAF,CAA5B;AACA,UAAMzB,IAAI,GAAG,MAAMwB,QAAQ,CAACE,IAAT,EAAnB;AACA,QAAIC,UAAU,GAAG,EAAjB;AACA,QAAI1B,GAAG,GAAG,EAAV;AACA,QAAIC,GAAG,GAAG,EAAV;AACA,QAAIC,KAAK,GAAG,EAAZ;AACA,QAAIC,KAAK,GAAG,EAAZ;AACA,QAAIC,GAAG,GAAG,EAAV;AACA,QAAIuB,KAAJ;AAEA5B,IAAAA,IAAI,CAAC6B,OAAL,CAAcC,IAAD,IAAU;AACrBH,MAAAA,UAAU,CAACI,IAAX,CAAgBD,IAAI,CAACE,QAAL,CAAcnB,UAAd,CAAyBoB,IAAzC;AACAL,MAAAA,KAAK,GAAG,IAAIM,IAAJ,CAASJ,IAAI,CAACK,IAAd,CAAR;;AACA,UAAIP,KAAK,CAACQ,QAAN,OAAqB,CAAzB,EAA4B;AAC1BnC,QAAAA,GAAG,CAAC8B,IAAJ,CAASD,IAAT;AACD;;AACD,UAAIF,KAAK,CAACQ,QAAN,OAAqB,CAAzB,EAA4B;AAC1BlC,QAAAA,GAAG,CAAC6B,IAAJ,CAASD,IAAT;AACD;;AACD,UAAIF,KAAK,CAACQ,QAAN,OAAqB,CAAzB,EAA4B;AAC1BjC,QAAAA,KAAK,CAAC4B,IAAN,CAAWD,IAAX;AACD;;AACD,UAAIF,KAAK,CAACQ,QAAN,OAAqB,CAAzB,EAA4B;AAC1BhC,QAAAA,KAAK,CAAC2B,IAAN,CAAWD,IAAX;AACD;;AACD,UAAIF,KAAK,CAACQ,QAAN,OAAqB,CAAzB,EAA4B;AAC1B/B,QAAAA,GAAG,CAAC0B,IAAJ,CAASD,IAAT;AACD;AACF,KAlBD;AAmBA,UAAMO,MAAM,GAAGC,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQb,UAAR,CAAX,CAAf;AACA,SAAKT,QAAL,CAAc;AACZlB,MAAAA,IADY;AAEZC,MAAAA,GAAG,EAAE;AAACkB,QAAAA,WAAW,EAAClB,GAAb;AAAkBmB,QAAAA,WAAW,EAAE;AAA/B,OAFO;AAGZlB,MAAAA,GAAG,EAAE;AAACiB,QAAAA,WAAW,EAACjB,GAAb;AAAkBkB,QAAAA,WAAW,EAAE;AAA/B,OAHO;AAIZjB,MAAAA,KAAK,EAAE;AAACgB,QAAAA,WAAW,EAAChB,KAAb;AAAoBiB,QAAAA,WAAW,EAAE;AAAjC,OAJK;AAKZhB,MAAAA,KAAK,EAAE;AAACe,QAAAA,WAAW,EAACf,KAAb;AAAoBgB,QAAAA,WAAW,EAAE;AAAjC,OALK;AAMZf,MAAAA,GAAG,EAAE;AAACc,QAAAA,WAAW,EAACd,GAAb;AAAkBe,QAAAA,WAAW,EAAE;AAA/B,OANO;AAOZd,MAAAA,IAAI,EAAE;AAACa,QAAAA,WAAW,EAAC,EAAb;AAAiBC,QAAAA,WAAW,EAAE;AAA9B,OAPM;AAQZb,MAAAA,IAAI,EAAE;AAACY,QAAAA,WAAW,EAAC,EAAb;AAAiBC,QAAAA,WAAW,EAAE;AAA9B,OARM;AASZZ,MAAAA,GAAG,EAAE;AAACW,QAAAA,WAAW,EAAC,EAAb;AAAiBC,QAAAA,WAAW,EAAE;AAA9B,OATO;AAUZX,MAAAA,GAAG,EAAE;AAACU,QAAAA,WAAW,EAAC,EAAb;AAAiBC,QAAAA,WAAW,EAAE;AAA9B,OAVO;AAWZV,MAAAA,GAAG,EAAE;AAACS,QAAAA,WAAW,EAAC,EAAb;AAAiBC,QAAAA,WAAW,EAAE;AAA9B,OAXO;AAYZT,MAAAA,GAAG,EAAE;AAACQ,QAAAA,WAAW,EAAC,EAAb;AAAiBC,QAAAA,WAAW,EAAE;AAA9B,OAZO;AAaZR,MAAAA,GAAG,EAAE;AAACO,QAAAA,WAAW,EAAC,EAAb;AAAiBC,QAAAA,WAAW,EAAE;AAA9B,OAbO;AAcZP,MAAAA,UAAU,EAAEwB,MAdA;AAeZtC,MAAAA,SAAS,EAAE,KAfC;AAgBZe,MAAAA,QAAQ,EAAE;AAACK,QAAAA,WAAW,EAAEd,GAAd;AAAmBe,QAAAA,WAAW,EAAC,EAA/B;AAAmCH,QAAAA,KAAK,EAAE;AAA1C,OAhBE;AAiBZF,MAAAA,MAAM,EAAE;AAACO,QAAAA,OAAO,EAACe,MAAM,CAAC,CAAD,CAAf;AAAoBpB,QAAAA,KAAK,EAAE;AAA3B;AAjBI,KAAd;AAmBD;;AACDwB,EAAAA,MAAM,GAAG;AACP,QAAIC,IAAI,GAAG,EAAX,CADO,CAEP;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK7C,KAAL,CAAWgB,QAA/B,EAAyC6B,CAAC,EAA1C,EAA8C;AAC5CD,MAAAA,IAAI,CAACX,IAAL,CAAUY,CAAC,GAAC,CAAZ;AACD;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,UAAMI,QAAQ,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EACf,UADe,EACH,UADG,CAAjB;AAEA,QAAIC,MAAM,GAAG,IAAb;AACAA,IAAAA,MAAM,GAAGD,QAAQ,CAACE,GAAT,CAAa,CAACpB,KAAD,EAAQX,KAAR,KAAkB;AACtC,0BACE,oBAAC,MAAD;AACI,QAAA,GAAG,EAAEA,KADT;AAEI,QAAA,KAAK,EAAEW,KAFX;AAGI,QAAA,KAAK,EAAEX,KAHX;AAII,QAAA,UAAU,EAAE,KAAKD,iBAAL,CAAuBiC,IAAvB,CAA4B,IAA5B,EAAkChC,KAAlC,CAJhB;AAKI,QAAA,YAAY,EAAE,KAAKnB,KAAL,CAAWgB,QAAX,CAAoBG,KALtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAQA,KATO,CAAT;AAWA,QAAIJ,UAAU,GAAG,IAAjB;AACAA,IAAAA,UAAU,GAAG,KAAKf,KAAL,CAAWe,UAAX,CAAsBmC,GAAtB,CAA0B,CAACX,MAAD,EAASpB,KAAT,KAAmB;AACxD,0BACE,oBAAC,WAAD;AACI,QAAA,GAAG,EAAEA,KADT;AAEI,QAAA,MAAM,EAAEoB,MAFZ;AAGI,QAAA,KAAK,EAAEpB,KAHX;AAII,QAAA,WAAW,EAAE,KAAKI,kBAAL,CAAwB4B,IAAxB,CAA6B,IAA7B,EAAmChC,KAAnC,CAJjB;AAKI,QAAA,UAAU,EAAE,KAAKnB,KAAL,CAAWiB,MAAX,CAAkBE,KALlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AASD,KAVY,CAAb;AAWA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,IAAI,EAAC,OAAhC;AAAwC,oBAAW,eAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC8B,MADD,CADF,EAIG,KAAKjD,KAAL,CAAWC,SAAX,gBACO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADP,gBAGG;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAoC,MAAA,IAAI,EAAC,OAAzC;AAAiD,oBAAW,eAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGc,UADH,CADA,CADF,eAME;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD;AACI,MAAA,QAAQ,EAAE,KAAKf,KAAL,CAAWgB,QAAX,CAAoBK,WADlC;AAEI,MAAA,UAAU,EAAE,KAAKrB,KAAL,CAAWiB,MAAX,CAAkBO,OAFlC;AAGI,MAAA,IAAI,EAAEoB,IAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CANF,CADA,CAPN,CADJ;AA2BD;;AAjN+B;;AAoNlC,eAAe9C,GAAf","sourcesContent":["import React from 'react';\nimport Table from \"./Table/Table\";\nimport './App.css';\nimport Loader from \"./Loader/Loader\";\nimport Months from \"./Months/Months\";\nimport Departments from \"./Departments/Departments\";\n\nclass App extends React.Component {\n\n\n  state ={\n    isLoading: true,\n    data: [],\n    jan: {},\n    feb: {},\n    march: {},\n    april: {},\n    may: {},\n    june: {},\n    july: {},\n    aug: {},\n    sep: {},\n    oct: {},\n    nov: {},\n    dec: {},\n    department: [],\n    resMonth:{},\n    resDep: {},\n  }\n\n  // resMonth: {dataOfMonth: may, countOfDays:31, index: 4},\n  monthClickHandler(index){\n    switch (index) {\n      case 0:\n        this.setState({\n          resMonth: {dataOfMonth: this.state.jan, countOfDays: this.state.jan.countOfDays, index: 0}\n        });\n        break;\n      case 1:\n        this.setState({\n          resMonth: {dataOfMonth: this.state.feb, countOfDays: this.state.feb.countOfDays, index: 1}\n        })\n        break;\n      case 2:\n        this.setState({\n          resMonth: {dataOfMonth: this.state.march, countOfDays: this.state.march.countOfDays, index: 2}\n        })\n        break;\n      case 3:\n        this.setState({\n          resMonth: {dataOfMonth: this.state.april, countOfDays: this.state.april.countOfDays, index: 3}\n        })\n        break;\n      case 4:\n        this.setState({\n          resMonth: {dataOfMonth: this.state.may, countOfDays: this.state.may.countOfDays, index: 4}\n        })\n        break;\n      case 5:\n        this.setState({\n          resMonth: {dataOfMonth: this.state.june, countOfDays: this.state.june.countOfDays, index: 5}\n        })\n        break;\n      case 6:\n        this.setState({\n          resMonth: {dataOfMonth: this.state.july, countOfDays: this.state.july.countOfDays, index: 6}\n        })\n        break;\n      case 7:\n        this.setState({\n          resMonth: {dataOfMonth: this.state.aug, countOfDays: this.state.aug.countOfDays, index: 7}\n        })\n        break;\n      case 8:\n        this.setState({\n          resMonth: {dataOfMonth: this.state.sep, countOfDays: this.state.sep.countOfDays, index: 8}\n        })\n        break;\n      case 9:\n        this.setState({\n          resMonth: {dataOfMonth: this.state.oct, countOfDays: this.state.oct.countOfDays, index: 9}\n        })\n        break;\n      case 10:\n        this.setState({\n          resMonth: {dataOfMonth: this.state.nov, countOfDays: this.state.nov.countOfDays, index: 10}\n        })\n        break;\n      case 11:\n        this.setState({\n          resMonth: {dataOfMonth: this.state.dec, countOfDays: this.state.dec.countOfDays, index: 11}\n        })\n        break;\n      default:\n        this.setState({\n          resMonth: {dataOfMonth: this.state.may, countOfDays: this.state.may.countOfDays, index: 4}\n        })\n    }\n  }\n  departClickHandler(index){\n    this.setState({\n      resDep: {dataDep: this.state.department[index], index: index}\n    })\n  }\n\n  async componentDidMount() {\n    const response = await fetch(` http://localhost:8080/reports`)\n    const data = await response.json();\n    let departName = [];\n    let jan = [];\n    let feb = [];\n    let march = [];\n    let april = [];\n    let may = [];\n    let month;\n\n    data.forEach((item) => {\n      departName.push(item.employee.department.name);\n      month = new Date(item.date);\n      if (month.getMonth() === 0) {\n        jan.push(item);\n      }\n      if (month.getMonth() === 1) {\n        feb.push(item);\n      }\n      if (month.getMonth() === 2) {\n        march.push(item);\n      }\n      if (month.getMonth() === 3) {\n        april.push(item);\n      }\n      if (month.getMonth() === 4) {\n        may.push(item);\n      }\n    });\n    const depart = Array.from(new Set(departName));\n    this.setState({\n      data,\n      jan: {dataOfMonth:jan, countOfDays: 31},\n      feb: {dataOfMonth:feb, countOfDays: 29},\n      march: {dataOfMonth:march, countOfDays: 31},\n      april: {dataOfMonth:april, countOfDays: 30},\n      may: {dataOfMonth:may, countOfDays: 31},\n      june: {dataOfMonth:[], countOfDays: 30},\n      july: {dataOfMonth:[], countOfDays: 31},\n      aug: {dataOfMonth:[], countOfDays: 31},\n      sep: {dataOfMonth:[], countOfDays: 30},\n      oct: {dataOfMonth:[], countOfDays: 31},\n      nov: {dataOfMonth:[], countOfDays: 30},\n      dec: {dataOfMonth:[], countOfDays: 31},\n      department: depart,\n      isLoading: false,\n      resMonth: {dataOfMonth: may, countOfDays:31, index: 4},\n      resDep: {dataDep:depart[0], index: 0}\n    })\n  }\n  render() {\n    let days = [];\n    // for (let i = 0; i < this.state.jan.countOfDays; i++) {\n    for (let i = 0; i < this.state.resMonth; i++) {\n      days.push(i+1);\n    }\n    console.log(days)\n    const monthArr = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\",\n      \"November\", \"December\"];\n    let months = null;\n    months = monthArr.map((month, index) => {\n      return (\n        <Months\n            key={index}\n            month={month}\n            index={index}\n            monthClick={this.monthClickHandler.bind(this, index)}\n            currentMonth={this.state.resMonth.index}\n        />\n    )});\n\n    let department = null;\n    department = this.state.department.map((depart, index) => {\n      return (\n        <Departments\n            key={index}\n            depart={depart}\n            index={index}\n            departClick={this.departClickHandler.bind(this, index)}\n            currentDep={this.state.resDep.index}\n        />\n      )\n    })\n    return (\n        <div>\n          <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n          {months}\n          </div>\n          {this.state.isLoading\n                ? <Loader />\n                :\n              <div className=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-2\">\n                <div className=\"btn-group-vertical\" role=\"group\" aria-label=\"Basic example\">\n                  {department}\n                </div>\n                </div>\n                <div className=\"col-10 overflow-auto\">\n                <Table\n                    resMonth={this.state.resMonth.dataOfMonth}\n                    department={this.state.resDep.dataDep}\n                    days={days}\n                />\n                </div>\n              </div>\n              </div>\n          }\n        </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}